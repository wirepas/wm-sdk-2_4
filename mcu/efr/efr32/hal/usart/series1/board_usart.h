/* Copyright 2020 Wirepas Ltd. All Rights Reserved.
 *
 * See file LICENSE.txt for full license details.
 *
 */

#ifndef BOARD_USART_H_
#define BOARD_USART_H_

// Map some registers constant to the USART selected
#if BOARD_USART_ID == 0
#define BOARD_USART         USART0
#define BOARD_USART_CMU_BIT CMU_HFPERCLKEN0_USART0
#define BOARD_UART_RX_IRQn  USART0_RX_IRQn
#define BOARD_UART_TX_IRQn  USART0_TX_IRQn
#define BOARD_UART_LDMA_RX  ldmaPeripheralSignal_USART0_RXDATAV
#define BOARD_UART_LDMA_TX  ldmaPeripheralSignal_USART0_TXEMPTY
#elif BOARD_USART_ID == 1
#define BOARD_USART         USART1
#define BOARD_USART_CMU_BIT CMU_HFPERCLKEN0_USART1
#define BOARD_UART_RX_IRQn  USART1_RX_IRQn
#define BOARD_UART_TX_IRQn  USART1_TX_IRQn
#define BOARD_UART_LDMA_RX  ldmaPeripheralSignal_USART1_RXDATAV
#define BOARD_UART_LDMA_TX  ldmaPeripheralSignal_USART1_TXEMPTY
#elif BOARD_USART_ID == 2
#define BOARD_USART         USART2
#define BOARD_USART_CMU_BIT CMU_HFPERCLKEN0_USART2
#define BOARD_UART_RX_IRQn  USART2_RX_IRQn
#define BOARD_UART_TX_IRQn  USART2_TX_IRQn
#define BOARD_UART_LDMA_RX  ldmaPeripheralSignal_USART2_RXDATAV
#define BOARD_UART_LDMA_TX  ldmaPeripheralSignal_USART2_TXEMPTY
#elif BOARD_USART_ID == 3
#define BOARD_USART         USART3
#define BOARD_USART_CMU_BIT CMU_HFPERCLKEN0_USART3
#define BOARD_UART_RX_IRQn  USART3_RX_IRQn
#define BOARD_UART_TX_IRQn  USART3_TX_IRQn
#define BOARD_UART_LDMA_RX  ldmaPeripheralSignal_USART3_RXDATAV
#define BOARD_UART_LDMA_TX  ldmaPeripheralSignal_USART3_TXEMPTY
#else // BOARD_USART_ID
#error USART ID must be 0, 1, 2 or 3
#endif // BOARD_USART_ID
#define BOARD_USART_ROUTE   BOARD_USART->ROUTELOC0 = BOARD_USART_ROUTELOC_RXLOC | \
                                                     BOARD_USART_ROUTELOC_TXLOC
#define BOARD_USART_PINS    BOARD_USART->ROUTEPEN = USART_ROUTEPEN_RXPEN | \
                                                    USART_ROUTEPEN_TXPEN
#define BOARD_USART_CLR_IRQ_ALL       BOARD_USART->IFC = _USART_IFC_MASK
#define BOARD_USART_CLR_IRQ_RXFULL    BOARD_USART->IFC = USART_IFC_RXFULL
#define BOARD_USART_CLR_IRQ_TXC       BOARD_USART->IFC = _USART_IFC_TXC_MASK
#define BOARD_USART_CLR_IRQ_TCMP1     BOARD_USART->IFC = USART_IFC_TCMP1
#define BOARD_USART_LDMA_CLR_IRQ      LDMA->IFC
#define BOARD_USART_LDMA_ENABLE       // TODO: Change to LDMA_Init()
#define BOARD_USART_LDMA_DISABLE      // TODO: Change to LDMA_DeInit()
#define BOARD_USART_ENABLE_USART_CLK  CMU->HFPERCLKEN0 |= BOARD_USART_CMU_BIT
#define BOARD_USART_DISABLE_USART_CLK CMU->HFPERCLKEN0 &= ~(BOARD_USART_CMU_BIT)
#define BOARD_USART_ENABLE_LDMA_CLK   CMU->HFBUSCLKEN0 |= CMU_HFBUSCLKEN0_LDMA
#define BOARD_USART_DISABLE_LDMA_CLK  CMU->HFBUSCLKEN0 &= ~(CMU_HFBUSCLKEN0_LDMA)
#define BOARD_USART_ENABLE_GPIO_CLK   CMU->HFBUSCLKEN0 |= CMU_HFBUSCLKEN0_GPIO
#define BOARD_USART_DISABLE_GPIO_CLK  CMU->HFBUSCLKEN0 &= ~(CMU_HFBUSCLKEN0_GPIO)

#endif // BOARD_USART_H_
